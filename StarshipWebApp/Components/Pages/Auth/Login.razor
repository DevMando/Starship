@page "/"
@page "/Login"
@page "/Login/{status:int}"
@using Radzen
@using Radzen.Blazor
@inject NavigationManager NavManager
@inject AuthenticationStateProvider AuthStateProvider

<link href="~/css/site.css" rel="stylesheet" />

<Animate Animation="Animations.FadeIn">
    <RadzenStack Orientation="Radzen.Orientation.Vertical" AlignItems="AlignItems.Center">

        <img class="glass-effect login-graphic" src="./images/login.png" />

        <PrettyBlazor.Condition Evaluation="@(status == (int)LoginStatus.SuccesfulLogOut)">
            <Match>
                <RadzenAlert Style="max-width:800px;" AlertStyle=AlertStyle.Success AllowClose="false" Variant=Variant.Filled Text="Successfuly Logged Out"></RadzenAlert>
            </Match>
        </PrettyBlazor.Condition>

        <GoogleSignInButton />

    </RadzenStack>
</Animate>



@code {
    [Parameter]
    public int? status { get; set; } = 0;

    protected enum LoginStatus
    {
        SuccesfulLogOut = 1
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();

        if ((bool)authState?.User?.Identity?.IsAuthenticated)
        {
            NavManager.NavigateTo("/Home", true);
        }

        base.OnInitialized();
    }
}