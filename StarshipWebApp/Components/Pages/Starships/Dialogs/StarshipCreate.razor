@page "/starships/create"
@attribute [Authorize]
@using Radzen
@using Radzen.Blazor
@using StarshipWebApp.Data
@using StarshipWebApp.Models
@using Microsoft.EntityFrameworkCore
@using StarshipWebApp.Components.Pages.Starships.Formatters
@using PrettyBlazor
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject StarWarsContext StarWarsContext
@inject Radzen.DialogService RadzenDialogService

<PageTitle>Create Starship</PageTitle>

<RadzenSteps @ref=@steps ShowStepsButtons="false" Style="margin-bottom: 20px;">
    <Steps>
        <RadzenStepsItem Text="Basic Info" Selected="@(currentStep == 0)" />
        <RadzenStepsItem Text="Performance" Selected="@(currentStep == 1)" />
        <RadzenStepsItem Text="Capacity & Crew" Selected="@(currentStep == 2)" />
    </Steps>
</RadzenSteps>

<RadzenTemplateForm Data="@starship" TItem="Starship" Submit="@OnSubmit">
    <ChildContent>
        <Condition Evaluation="currentStep == 0">
            <Match>
                <RadzenFieldset Text="Basic Starship Details">
                    <RadzenLabel Text="Name *" />
                    <RadzenTextBox @bind-Value="starship.Name" Style="width:100%" Name="Name" />
                    <RadzenRequiredValidator Text="Name is required" Component="Name" />

                    <RadzenLabel Text="Model *" />
                    <RadzenTextBox @bind-Value="starship.Model" Style="width:100%" Name="Model" />
                    <RadzenRequiredValidator Text="Model is required" Component="Model" />

                    <RadzenLabel Text="Manufacturer *" />
                    <RadzenAutoComplete Data="@_starshipManufacturers"
                                        @bind-Value="starship.Manufacturer"
                                        Placeholder="Select or type a manufacturer"
                                        FilterOperator="StringFilterOperator.Contains"
                                        AllowCustom="true"
                                        Style="width:100%"
                                        class="dark-autocomplete"
                                        Name="Manufacturer" />
                    <RadzenRequiredValidator Text="Manufacturer is required" Component="Manufacturer" />

                    <RadzenLabel Text="Starship Class *" />
                    <RadzenAutoComplete Data="@_starshipClasses"
                                        @bind-Value="starship.StarshipClass"
                                        Placeholder="Select or type class"
                                        FilterOperator="StringFilterOperator.Contains"
                                        AllowCustom="true"
                                        Style="width:100%"
                                        class="dark-autocomplete"
                                        Name="StarshipClass" />
                    <RadzenRequiredValidator Text="Class is required" Component="StarshipClass" />

                    <FormattedNumericInput Label="Cost (Credits) *"
                                           Name="CostInCredits"
                                           @bind-Value="starship.CostInCredits" />
                </RadzenFieldset>
            </Match>
        </Condition>

        <Condition Evaluation="currentStep == 1">
            <Match>
                <RadzenFieldset Text="Performance Specs">
                    <FormattedNumericInput Label="Max Speed (Atmospheric)"
                                           Name="MaxAtmospheringSpeed"
                                           @bind-Value="starship.MaxAtmospheringSpeed" />

                    <RadzenLabel Text="Hyperdrive Rating" Style="margin-top:14px;" />
                    <div style="display: flex; align-items: center; gap: 12px; margin-bottom:14px;">
                        <RadzenSlider @bind-Value="starship.HyperdriveRating"
                                      Min="0"
                                      Max="10"
                                      Step="0.1"
                                      ShowTicks="true"
                                      TicksStep="1"
                                      TValue="decimal?"
                                      Style="flex-grow: 1;" />
                        <RadzenBadge Text="@($"{starship.HyperdriveRating:0.0}")" Style="min-width: 40px;" />
                    </div>

                    <FormattedNumericInput Label="Speed (MGLT)"
                                           Name="MGLT"
                                           @bind-Value="starship.MGLT" />

                    <RadzenLabel Text="Length (meters) *" />
                    <RadzenTextBox @bind-Value="starship.Length" Style="width:100%" Name="Length" />
                    <RadzenRequiredValidator Text="Length is required" Component="Length" />
                </RadzenFieldset>
            </Match>
        </Condition>

        <Condition Evaluation="currentStep==2">
            <Match>
                <RadzenFieldset Text="Cargo & Capacity">
                    <FormattedNumericInput Label="Cargo Capacity (kg)"
                                           Name="CargoCapacity"
                                           @bind-Value="starship.CargoCapacity" />

                    <RadzenLabel Text="Consumables *" />
                    <RadzenTextBox @bind-Value="starship.Consumables" Style="width:100%" Name="Consumables" />
                    <RadzenRequiredValidator Text="Consumables is required" Component="Consumables" />
                </RadzenFieldset>

                <RadzenFieldset Text="Crew & Passengers" Style="margin-top: 20px;">
                    <RadzenLabel Text="Crew *" />
                    <RadzenTextBox @bind-Value="starship.Crew" Style="width:100%" Name="Crew" />
                    <RadzenRequiredValidator Text="Crew is required" Component="Crew" />

                    <FormattedNumericInput Label="Passengers"
                                           Name="Passengers"
                                           @bind-Value="starship.Passengers" />
                </RadzenFieldset>
            </Match>
        </Condition>

        <div style="margin-top: 20px; display: flex; justify-content: space-between;">
            <RadzenButton Text="Back"
                          Disabled="@(currentStep == 0)"
                          Click="@GoToPreviousStep"
                          ButtonStyle="ButtonStyle.Secondary" />

            <Condition Evaluation="currentStep < 2">
                <Match>
                    <RadzenButton Text="Next"
                                  Disabled="@(!StepIsValid(currentStep))"
                                  Click="@GoToNextStep"
                                  ButtonStyle="ButtonStyle.Primary" />
                </Match>
                <NotMatch>
                    <RadzenButton Text="Save"
                                  Disabled="@(!StepIsValid(currentStep))"
                                  ButtonStyle="ButtonStyle.Success"
                                  ButtonType="ButtonType.Submit"
                                  Icon="save"
                                  Style="margin-left: auto;" />
                </NotMatch>
            </Condition>
        </div>
    </ChildContent>
</RadzenTemplateForm>

@code {
    private Starship starship = new Starship();
    private int currentStep = 0;
    private List<string> _starshipClasses = new();
    private List<string> _starshipManufacturers = new();
    RadzenSteps steps;

    protected override async Task OnInitializedAsync()
    {
        await LoadAutoCompleteFieldLists();
    }

    private async Task LoadAutoCompleteFieldLists()
    {
        _starshipClasses = await StarWarsContext.Starships
            .Where(s => !string.IsNullOrEmpty(s.StarshipClass))
            .Select(s => s.StarshipClass)
            .Distinct()
            .ToListAsync();

        _starshipManufacturers = await StarWarsContext.Starships
            .Where(s => !string.IsNullOrEmpty(s.StarshipClass))
            .Select(s => s.Manufacturer)
            .Distinct()
            .ToListAsync();
    }

    private async Task OnSubmit()
    {
        starship.CreatedDate = DateTime.UtcNow;
        starship.UpdatedDate = DateTime.UtcNow;

        StarWarsContext.Starships.Add(starship);
        await StarWarsContext.SaveChangesAsync();

        RadzenDialogService.Close(starship);
    }

    private void GoToNextStep()
    {
        currentStep += 1;
        steps.NextStep();
        StateHasChanged();
    }

    private void GoToPreviousStep()
    {
        currentStep -= 1;
        steps.PrevStep(); 
        StateHasChanged();
    }

    private bool StepIsValid(int currentStep)
    {
        return currentStep switch
        {
            0 => !string.IsNullOrWhiteSpace(starship.Name)
                && !string.IsNullOrWhiteSpace(starship.Model)
                && !string.IsNullOrWhiteSpace(starship.Manufacturer)
                && !string.IsNullOrWhiteSpace(starship.StarshipClass)
                && starship.CostInCredits.HasValue,
            1 => !string.IsNullOrWhiteSpace(starship.Length),
            2 => !string.IsNullOrWhiteSpace(starship.Consumables)
                && !string.IsNullOrWhiteSpace(starship.Crew),
            _ => false
        };
    }
}